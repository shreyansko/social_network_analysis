V(degree_x)$name
# Attach attributes to the vertices of the graph
V(degree_x)$age = attr$AGE[match(V(degree_x)$name, attr$ID)]
View(degree_x)
# Attach attributes to the vertices of the graph
V(degree_x)$age = attr$AGE[match(V(degree_x)$name, attr$ID)]
V(degree_x)$tenure = attr$TENURE[match(V(degree_x)$name, attr$ID)]
V(degree_x)$level = attr$LEVEL[match(V(degree_x)$name, attr$ID)]
V(degree_x)$dept = attr$DEPT[match(V(degree_x)$name, attr$ID)]
set.seed(12)
l <- layout.kamada.kawai(degree_x)
par(mfrow = c(1, 1))
oldMargins <- par("mar")
par(mar = c(1, 1, 1, 1))
par(mar = oldMargins)
?degree
igrap::degree(degree_x, mode = "in")
igraph::degree(degree_x, mode = "in")
igraph::degree(degree_x, mode = "out")
plot(degree_x)
igraph::degree(degree_x, mode = c("in"), loops = TRUE, normalized = FALSE)
# Attach attributes to the vertices of the graph
V(degree_x)$age = attr$AGE[match(V(degree_x)$name, attr$ID)]
V(degree_x)$tenure = attr$TENURE[match(V(degree_x)$name, attr$ID)]
V(degree_x)$level = attr$LEVEL[match(V(degree_x)$name, attr$ID)]
V(degree_x)$dept = attr$DEPT[match(V(degree_x)$name, attr$ID)]
V(degree_x)
V(degree_x)$age
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = T)
## Eigenvector Centrality
egn <- evcent(degree_x)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = T)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
df <- data.frame(name = V(degree_x)$name)
cb1 <- cbind(df, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
View(cb1)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = T)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
df <- data.frame(name = V(degree_x)$name)
cb1 <- cbind(df, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb1[, c(1:7)]
igraph::evcent(degree_x)
cb1[, c(1:7)]
cb1[, c(1:6)]
ncol(cb1)
31-4
cb1[, c(1:6,26: )]
cb1[, c(1:6,26:31)]
cb1[, c(1:6,27:31)]
cb1[, c(1:6,28:31)]
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = T)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
cb1 <- cbind(d.in, d.out, degree, close, btwn, egn$vector)
cor(cb1)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = T)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2[, c(1:6,28:31)]
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = F)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = T)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:6,28:31)]
cb2
max(cb2$close)
max(cb2$btwn)
max(cb2$vector)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = F)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:6,28:31)]
cb2
plot(degree_x)
plot(degree_x)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:6,28:31)]
cb2
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out,, d.in/d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out,, degree_ratio, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, degree_ratio, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, loops = T, normalized = F)
### Ratio of in-degree and out-degree
degree_ratio = d.in/d.out
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = F)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, degree_ratio, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:6,28:31)]
cb2
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:6,28:31)]
cb2
min(cb2$degree)
min(cb2$d.in)
which(min(cb2$d.in))
which(cb2$d.in == min(cb2$d.in))
which(cb2$d.out == min(cb2$d.out))
min(cb2$d.out)
min(cb2$close)
which(cb2$close == min(cb2$close))
which(cb2$btwn == min(cb2$btwn))
min(cb2$btwn)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,28:31)]
cb2
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:31)]
cb2
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:32)]
cb2
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:32)]
cb2
min(cb2$btwn)
min(cb2$vector)
which(cb2$vector == min(cb2$vector))
which(cb2$vector == max(cb2$vector))
max(cb2$vector)
which(cb2$degree == max(cb2$degree))
which(cb2$d.in == max(cb2$d.in))
which(cb2$d.out == max(cb2$d.out))
which(cb2$close == max(cb2$close))
which(cb2$btwn == max(cb2$btwn))
which(cb2$vector == max(cb2$vector))
max(cb2$btwn)
max(cb2$close)
max(cb2$d.out)
max(cb2$d.in)
max(cb2$vector)
min(cb2$btwn)
hist(V(degree_x)$age)
hist(V(degree_x)$tenure)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, mode = c("total"), loops = T, normalized = F)
### Ratio of in-degree and out-degree
degree_ratio = d.in/d.out
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"))
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = F)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:32)]
cb2
?degree
degree(degree_x)
igraph::degree(degree_x)
igraph::degree(degree_x,mode = c("total"), loops = T, normalized = F)
which(cb2$degree == max(cb2$degree))
which(cb2$degree == min(cb2$degree))
igraph::closeness(degree_x)
igraph::closeness(degree_x, mode = c("all"))
rename(cb2$`V(degree_x)$age`:'age')
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:32)]
cb2
rename(cb2$`V(degree_x)$age`:'age')
View(cb2)
cb2 <- rename(cb2$`V(degree_x)$age`:'age')
cb2 <- rename(cb2$`V(degree_x)$age`='age')
?rename
cb2 <- rename(cb2, `V(degree_x)$age`='age')
cb2 <- rename(cb2, 'age' = `V(degree_x)$age`)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:32)]
cb2 <- rename(cb2, 'age' = `V(degree_x)$age`, 'tenure' = `V(degree_x)$tenure`,
'level' = `V(degree_x)$level`, 'dept' = `V(degree_x)$dept`)
cb2
summary(lm(degree~tenure + age + level, data = cb2))
summary(lm(vector~tenure + age + level, data = cb2))
summary(lm(degree~tenure + age + level, data = cb2))
summary(lm(btwn~tenure + age + level, data = cb2))
summary(lm(close~tenure + age + level, data = cb2))
summary(lm(vector~tenure + age + level, data = cb2))
summary(lm(vector~tenure + age + level + dept, data = cb2))
summary(lm(vector~tenure + age + level, data = cb2))
summary(lm(d.in~tenure + age + level, data = cb2))
summary(lm(d.out~tenure + age + level, data = cb2))
advice <- read.csv("krackht_advice.csv")
attr <- read.csv("krackht_attr.csv")
colnames(frnd) <- (1:21)
advice <- read.csv("krackht_advice.csv")
attr <- read.csv("krackht_attr.csv")
colnames(advice) <- (1:21)
x <- as.matrix(advice)
degree_x <- graph.adjacency(x, mode ="directed", weighted = NULL)
advice$degree = igraph::degree(degree_x)
advice_edges <- E(degree_x)
advice_vertices <- V(degree_x)
# to count edges: gsize(degree_x)
# to count verticies: gorder(degree_x)
# Attach attributes to the vertices of the graph
V(degree_x)$age = attr$AGE[match(V(degree_x)$name, attr$ID)]
V(degree_x)$tenure = attr$TENURE[match(V(degree_x)$name, attr$ID)]
V(degree_x)$level = attr$LEVEL[match(V(degree_x)$name, attr$ID)]
V(degree_x)$dept = attr$DEPT[match(V(degree_x)$name, attr$ID)]
# Calculating density of the directed network
max_ties = nrow(advice) * (nrow(advice) - 1) # All potential ties
actual_ties = gsize(degree_x) # observed ties
density_advice = actual_ties/ max_ties
density_advice
hist(V(degree_x)$age)
hist(V(degree_x)$tenure)
igraph::degree(degree_x, mode = c("total"), loops = T, normalized = T)
igraph::degree(degree_x, mode = c("out"), loops = T, normalized = T)
igraph::degree(degree_x, mode = c("in"), loops = T, normalized = T)
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, mode = c("total"), loops = T, normalized = F)
### Ratio of in-degree and out-degree
degree_ratio = d.in/d.out
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"), normalized = T)
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = F)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:32)]
cb2 <- rename(cb2, 'age' = `V(degree_x)$age`, 'tenure' = `V(degree_x)$tenure`,
'level' = `V(degree_x)$level`, 'dept' = `V(degree_x)$dept`)
cb2
# Calculating Centralities
## Degree Centrality
d.in <- igraph::degree(degree_x, mode = c("in"), loops = T, normalized = F)
d.out <- igraph::degree(degree_x, mode = c("out"), loops = T, normalized = F)
degree <- igraph::degree(degree_x, mode = c("total"), loops = T, normalized = F)
### Ratio of in-degree and out-degree
degree_ratio = d.in/d.out
## Closeness Centrality
close <- igraph::closeness(degree_x, mode = c("all"), normalized = T)
## Betweenness Centrality
btwn <- igraph::betweenness(degree_x, directed = F)
## Eigenvector Centrality
egn <- igraph::evcent(degree_x)
eigen_vec = egn$vector
cb1 <- cbind(d.in, d.out, degree, close, btwn, eigen_vec)
cor(cb1)
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, egn, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2 <- cb2[, c(1:7,29:32)]
cb2 <- rename(cb2, 'age' = `V(degree_x)$age`, 'tenure' = `V(degree_x)$tenure`,
'level' = `V(degree_x)$level`, 'dept' = `V(degree_x)$dept`)
cb2
which(cb2$degree == max(cb2$degree))
max(cb2$degree)
which(cb2$d.in == max(cb2$d.in))
max(cb2$d.in)
which(cb2$d.out == max(cb2$d.out))
max(cb2$d.out)
which(cb2$close == max(cb2$close))
max(cb2$cloe)
max(cb2$close)
which(cb2$btwn == max(cb2$btwn))
max(cb2$btwn)
which(cb2$vector == max(cb2$vector))
max(cb2$vector)
which(cb2$degree == min(cb2$degree))
min(cb2$degree)
which(cb2$d.in == min(cb2$d.in))
min(cb2$d.in)
which(cb2$d.out == min(cb2$d.out))
min(cb2$d.out)
which(cb2$close == min(cb2$close))
min(cb2$close)
which(cb2$btwn == min(cb2$btwn))
min(cb2$btwn)
which(cb2$vector == min(cb2$vector))
min(cb2$vector)
eigen_vec
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, eigen_vec, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
cb2
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, eigen_vec, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
#cb2 <- cb2[, c(1:7,29:32)]
cb2 <- rename(cb2, 'age' = `V(degree_x)$age`, 'tenure' = `V(degree_x)$tenure`,
'level' = `V(degree_x)$level`, 'dept' = `V(degree_x)$dept`)
cb2
summary(lm(d.in~tenure + age + level, data = cb2))
summary(lm(kevek~tenure + age , data = cb2))
summary(lm(level~tenure + age , data = cb2))
summary(lm(level~tenure , data = cb2))
summary(lm(level~tenure + dept + age, data = cb2))
summary(lm(level~tenure + dept + age + d.in, data = cb2))
summary(lm(eigen_vec~tenure + age + level, data = cb2))
summary(lm(eigen_vec~tenure + age + level + dept, data = cb2))
summary(lm(close~tenure + age + level + dept, data = cb2))
summary(lm(btwn~tenure + age + level + dept, data = cb2))
summary(lm(btwn~tenure + age + level, data = cb2))
summary(lm(degree~tenure + age + level, data = cb2))
summary(lm(d.out~tenure + age + level, data = cb2))
summary(lm(d.out~tenure , data = cb2))
summary(lm(d.out~tenure + level, data = cb2))
summary(lm(d.in~tenure + log(age) + level, data = cb2))
summary(lm(d.in~tenure + age + level, data = cb2))
summary(lm(d.in~tenure + log(age) + level, data = cb2))
summary(lm(d.in~tenure + age + level, data = cb2))
summary(lm(d.in~log(tenure) + age + level, data = cb2))
summary(lm(d.in~ log(tenure) + age + level, data = cb2))
summary(lm(d.in~tenure + age + level, data = cb2))
summary(lm(d.in~tenure*age + level, data = cb2))
summary(lm(d.in~tenure + age*level, data = cb2))
summary(lm(d.in~ age*level, data = cb2))
summary(lm(d.in~tenure*age*level, data = cb2))
summary(lm(d.in~tenure + age*level, data = cb2))
summary(lm(d.in~tenure *level + age, data = cb2))
summary(lm(d.in~tenure + age*level, data = cb2))
summary(lm(d.in~log(tenure) + age*level, data = cb2))
log(cb2$tenure)
cb2$tenure[13]
cb2$tenure[13] <- 1
# Changing 0 to 1 to take log
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + age*level, data = cb2))
# Changing 0 to 1 to take log
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + age + level, data = cb2))
hist(log(cb2$tenure))
hist((cb2$tenure))
library(ggplot2)
ggplot(data = cb2, aes(x = tenure, y = d.in)) + geom_point()
# Changing 0  years to 1 year in tenure to be able to take log
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + age*level, data = cb2))
summary(lm(d.out~log(tenure) + age*level, data = cb2))
summary(lm(eigen_vec~log(tenure) + age*level, data = cb2))
summary(lm(close~log(tenure) + age*level, data = cb2))
summary(lm(btwn~log(tenure) + age*level, data = cb2))
-cb2$level
4-cb2$level
# Changing 0  years to 1 year in tenure to be able to take log
cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + age*level, data = cb2))
# Changing 0  years to 1 year in tenure to be able to take log
cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + log(age)*level, data = cb2))
# Changing 0  years to 1 year in tenure to be able to take log
cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + age*level, data = cb2))
# Changing 0  years to 1 year in tenure to be able to take log
cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + log(age)*level, data = cb2))
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, eigen_vec, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
#cb2 <- cb2[, c(1:7,29:32)]
cb2 <- rename(cb2, 'age' = `V(degree_x)$age`, 'tenure' = `V(degree_x)$tenure`,
'level' = `V(degree_x)$level`, 'dept' = `V(degree_x)$dept`)
cb2
# Changing 0  years to 1 year in tenure to be able to take log
cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) + log(age)*level, data = cb2))
# Changing 0  years to 1 year in tenure to be able to take log
#cb2$level <- 4-cb2$level
#cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) +age*level, data = cb2))
df <- data.frame(name = V(degree_x)$name)
cb2 <- cbind(df, degree, d.in, d.out, close, btwn, eigen_vec, V(degree_x)$age, V(degree_x)$tenure, V(degree_x)$level, V(degree_x)$dept)
#cb2 <- cb2[, c(1:7,29:32)]
cb2 <- rename(cb2, 'age' = `V(degree_x)$age`, 'tenure' = `V(degree_x)$tenure`,
'level' = `V(degree_x)$level`, 'dept' = `V(degree_x)$dept`)
cb2
# Changing 0  years to 1 year in tenure to be able to take log
#cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) +age*level, data = cb2))
# Changing 0  years to 1 year in tenure to be able to take log
#cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) +log(age)*level, data = cb2))
# Changing 0  years to 1 year in tenure to be able to take log
#cb2$level <- 4-cb2$level
cb2$tenure[13] <- 1
summary(lm(d.in~log(tenure) +age*level, data = cb2))
ggplot(data = cb2, aes(x = tenure, y = age)) + geom_point()
ggplot(data = cb2, aes(x = tenure, y = level)) + geom_point()
ggplot(data = cb2, aes(x = age, y = level)) + geom_point()
ggplot(data = cb2, aes(x = age, y = 4-level)) + geom_point()
ggplot(data = cb2, aes(x = 4-level, y = age)) + geom_point()
cor(cb2$age, cb2$level)
cor(cb2$age, cb2$tenure)
cor(cb2$level, cb2$tenure)
